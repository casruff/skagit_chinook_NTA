skip = hdr_NPGO + (yr_frst-1950)*12,
n_max = (n_yrs)*12-5)
colnames(dat_NPGO) <- c("year","month","NPGO")
## select only years of interest indexed by brood year
dat_NPGO <- dat_NPGO[dat_NPGO$year >= yr_frst+marine_lag &
dat_NPGO$year <= yr_last-age_min+n_fore+marine_lag,]
dat_NPGO <- aggregate(dat_NPGO$NPGO, by = list(year = dat_NPGO$year), mean)
dat_NPGO <- data.frame(year = seq(yr_frst,yr_last-age_min+n_fore),
NPGO = dat_NPGO[,2])
dat_NPGO[,"NPGO"] <- round(dat_NPGO[,"NPGO"], 2)
## combine covariates
dat_cvrs <- Reduce(function(...) merge(..., all = TRUE),
list(dat_flow_wtr,
dat_flow_sum,
dat_NPGO
))
## check table of covariates
head(dat_cvrs)
## write covariates to a file
write_csv(dat_cvrs, file.path(datadir, "skagit_chinook_covars.csv"))
options(width = 100)
knitr::opts_chunk$set(message = FALSE, dev = "pdf")
if(!require("readr")) {
install.packages("readr")
library("readr")
}
if(!require("captioner")) {
devtools::install_github("adletaw/captioner")
library("captioner")
}
if(!require("coda")) {
install.packages("coda")
library("coda")
}
if(!require("here")) {
install.packages("here")
library("here")
}
if(!require("gsl")) {
install.packages("gsl")
library("gsl")
}
## set default caption delimiter
fig_cap <- captioner(infix = ".")
## set directory locations
datadir <- here("data")
analdir <- here("analysis")
savedir <- here("analysis/cache")
## better round/floor/ceiling
around <- function(x, func = "round", prec = 1) {
## `func` can be "round", "floor", or "ceiling"
## `prec` is desired precision (eg, 0.1 is to nearest tenth)
if(!is.double(x)) {
stop("`x` must be a real number")
}
if(!(func %in% c("round", "floor", "ceiling"))) {
stop("`func` must be \"round\", \"floor\", or \"ceiling\"")
}
if(prec <= 0) {
stop("`prec` cannot be less than or equal to 0")
}
do.call(func, list(x / prec)) * prec
}
## first & last years of fish data
yr_frst <- 1992
yr_last <- 2016
## years of data
dat_yrs <- seq(yr_frst, yr_last)
## number of years of data
n_yrs <- length(dat_yrs)
## min & max adult age classes
age_min <- 3
age_max <- 8
## num of age classes
A <- age_max - age_min + 1
## number of years for run forecasts
n_fore <- 0
## posterior coverage interval
CI_vec <- c(0.025,0.5,0.975)
## covariate names & units for plotting
cov_names <- c(expression(paste("Max flow (",m^3," ",s^{-1},")")),
expression(paste("Min flow (",m^3," ",s^{-1},")")),
"NPGO")
## 1. file with escapement data
## [n_yrs x 2] matrix of obs counts; 1st col is calendar yr
fn_esc <- "skagit_sfck_esc.csv"
## 2. file with harvest data
## [n_yrs x 2] matrix of obs catch; 1st col is calendar yr
fn_harv <- "skagit_sf_chinook_aeq.csv"
best_fit <- readRDS(file.path(savedir, "fit_ricker_cov.rds"))
## covariate(s)
dat_cvrs <- read_csv(file.path(datadir, "skagit_chinook_covars.csv"))
## total number of covariates
n_cov <- dim(dat_cvrs)[2] - 1
## escapement
dat_esc <- read_csv(file.path(datadir, fn_esc))
##
dat_esc <- dat_esc[which(dat_esc$year %in% seq(yr_frst,yr_last,1)),]
## years of data
dat_yrs <- dat_esc$year
## number of years of data
n_yrs <- length(dat_yrs)
## log of escapement
ln_dat_esc <- c(log(dat_esc$escapement),rep(NA,n_fore))
## harvest
dat_harv <- read_csv(file.path(datadir, fn_harv))
##
dat_harv <- dat_harv[which(dat_harv$year %in% seq(yr_frst,yr_last,1)),]
## drop year col & first age_max rows
dat_harv <- c(dat_harv$tot_aeq, rep(0,n_fore))
## params
## Ricker
ra <- 3
rb <- 1.2e-4
## B-H
ba <- 3
bb <- 3/1.4e4
## ref pts
## Ricker
rmr <- ra/rb*exp(-1)
rsy <- (1 - lambert_W0(exp(1)/ra)) / rb
ruy <- 1 - lambert_W0(exp(1)/ra)
## B-H
bmr <- ba/bb
bsy <- (ba/bb)*sqrt(1/ba)-(1/bb)
bsy <- (sqrt(ba)-1)/bb
buy <- 1 - sqrt(1/ba)
## S-R curves
## spawners
ss <- seq(0,1.2e4,10)
## recuits (Ricker)
rr <- ra*ss/exp(rb*ss)
## recruits (B-H)
br <- ba*ss/(1 + bb*ss)
layout(matrix(c(1,0,2),3,1),
heights=lcm(c(3,0.3,3)*2.54),
widths=lcm(3*2.54))
par(mai=c(0.4,0.4,0.2,0.2), omi=c(0,0,0,0.25))
## Ricker
plot(ss, rr, type="n", xlim=range(ss), ylim=range(ss), xaxs="i", yaxs="i",
xlab="", ylab="", xaxt="n", yaxt="n", bty="L")
layout(matrix(c(1,1,2,3),2,2),c(3,2),c(1,1))
xoffSet <- 0.05
yoffSet <- 0.03
## colors for plotting
clr <- rgb(100, 0, 200,
alpha = seq(200, 100,
length.out = age_max-age_min+n_fore),
maxColorValue = 255)
## posterior of spawners
s_dat <- mod_res[,grep("Sp", colnames(mod_res))]
s_dat <- apply(s_dat, 2, quantile, CI_vec)
## results
mod_res <- do.call("rbind", best_fit)
## colors for plotting
clr <- rgb(100, 0, 200,
alpha = seq(200, 100,
length.out = age_max-age_min+n_fore),
maxColorValue = 255)
s_dat <- apply(s_dat, 2, quantile, CI_vec)
## posterior of spawners
s_dat <- mod_res[,grep("Sp", colnames(mod_res))]
s_dat <- apply(s_dat, 2, quantile, CI_vec)
s_dat <- s_dat[, 1:(n_yrs-age_min+n_fore)]
## posterior of recruits
r_dat <- mod_res[, grep("tot_ln_Rec", colnames(mod_res))]
r_dat <- exp(apply(r_dat, 2, quantile, CI_vec))
## median values for a & b
aa <- apply(mod_res[, grep("ln_Rkr_a", colnames(mod_res))], 2, median)
bb <- median(mod_res[, "beta"])
r_dat
dim(r_dat)
dim(s_dat)
layout(matrix(c(1,1,2,3),2,2),c(3,2),c(1,1))
xoffSet <- 0.05
yoffSet <- 0.03
## colors for plotting
clr <- rgb(100, 0, 200,
alpha = seq(200, 100,
length.out = age_max-age_min+n_fore),
maxColorValue = 255)
## posterior of spawners
s_dat <- mod_res[,grep("Sp", colnames(mod_res))]
s_dat <- apply(s_dat, 2, quantile, CI_vec)
s_dat <- s_dat[, 1:(n_yrs-age_min+n_fore)]
## posterior of recruits
r_dat <- mod_res[, grep("tot_ln_Rec", colnames(mod_res))]
r_dat <- exp(apply(r_dat, 2, quantile, CI_vec))
## median values for a & b
aa <- apply(mod_res[, grep("ln_Rkr_a", colnames(mod_res))], 2, median)
bb <- median(mod_res[, "beta"])
## empty plot space for spawner-recruit relationships
dd <- 3000
yM <- around(max(r_dat), "ceiling", dd)
xM <- around(max(s_dat), "ceiling", dd)
par(mai = c(0.8,0.8,0.1,0.1), omi = c(0,0,0,0))
plot(s_dat[2,], r_dat[2,], xlim = c(0,xM), ylim = c(0,yM), type = "n",
xaxs = "i", yaxs = "i", cex.lab = 1.2,
xlab = expression(Spawners~(10^3)),
ylab = expression(Recruits~(10^3)),
xaxt = "n", yaxt = "n", bty="L")
options(width = 100)
knitr::opts_chunk$set(message = FALSE, dev = "pdf")
if(!require("readr")) {
install.packages("readr")
library("readr")
}
if(!require("captioner")) {
devtools::install_github("adletaw/captioner")
library("captioner")
}
if(!require("coda")) {
install.packages("coda")
library("coda")
}
if(!require("here")) {
install.packages("here")
library("here")
}
if(!require("gsl")) {
install.packages("gsl")
library("gsl")
}
## set default caption delimiter
fig_cap <- captioner(infix = ".")
## set directory locations
datadir <- here("data")
analdir <- here("analysis")
savedir <- here("analysis/cache")
## better round/floor/ceiling
around <- function(x, func = "round", prec = 1) {
## `func` can be "round", "floor", or "ceiling"
## `prec` is desired precision (eg, 0.1 is to nearest tenth)
if(!is.double(x)) {
stop("`x` must be a real number")
}
if(!(func %in% c("round", "floor", "ceiling"))) {
stop("`func` must be \"round\", \"floor\", or \"ceiling\"")
}
if(prec <= 0) {
stop("`prec` cannot be less than or equal to 0")
}
do.call(func, list(x / prec)) * prec
}
## first & last years of fish data
yr_frst <- 1992
yr_last <- 2016
## years of data
dat_yrs <- seq(yr_frst, yr_last)
## number of years of data
n_yrs <- length(dat_yrs)
## min & max adult age classes
age_min <- 2
age_max <- 5
## num of age classes
A <- age_max - age_min + 1
## number of years for run forecasts
n_fore <- 0
## posterior coverage interval
CI_vec <- c(0.025,0.5,0.975)
## covariate names & units for plotting
cov_names <- c(expression(paste("Max flow (",m^3," ",s^{-1},")")),
expression(paste("Min flow (",m^3," ",s^{-1},")")),
"NPGO")
## 1. file with escapement data
## [n_yrs x 2] matrix of obs counts; 1st col is calendar yr
fn_esc <- "skagit_sfck_esc.csv"
## 2. file with harvest data
## [n_yrs x 2] matrix of obs catch; 1st col is calendar yr
fn_harv <- "skagit_sf_chinook_aeq.csv"
best_fit <- readRDS(file.path(savedir, "fit_ricker_cov.rds"))
## covariate(s)
dat_cvrs <- read_csv(file.path(datadir, "skagit_chinook_covars.csv"))
## total number of covariates
n_cov <- dim(dat_cvrs)[2] - 1
## escapement
dat_esc <- read_csv(file.path(datadir, fn_esc))
##
dat_esc <- dat_esc[which(dat_esc$year %in% seq(yr_frst,yr_last,1)),]
## years of data
dat_yrs <- dat_esc$year
## number of years of data
n_yrs <- length(dat_yrs)
## log of escapement
ln_dat_esc <- c(log(dat_esc$escapement),rep(NA,n_fore))
## harvest
dat_harv <- read_csv(file.path(datadir, fn_harv))
##
dat_harv <- dat_harv[which(dat_harv$year %in% seq(yr_frst,yr_last,1)),]
## drop year col & first age_max rows
dat_harv <- c(dat_harv$tot_aeq, rep(0,n_fore))
## params
## Ricker
ra <- 3
rb <- 1.2e-4
## B-H
ba <- 3
bb <- 3/1.4e4
## ref pts
## Ricker
rmr <- ra/rb*exp(-1)
rsy <- (1 - lambert_W0(exp(1)/ra)) / rb
ruy <- 1 - lambert_W0(exp(1)/ra)
## B-H
bmr <- ba/bb
bsy <- (ba/bb)*sqrt(1/ba)-(1/bb)
bsy <- (sqrt(ba)-1)/bb
buy <- 1 - sqrt(1/ba)
## S-R curves
## spawners
ss <- seq(0,1.2e4,10)
## recuits (Ricker)
rr <- ra*ss/exp(rb*ss)
## recruits (B-H)
br <- ba*ss/(1 + bb*ss)
layout(matrix(c(1,0,2),3,1),
heights=lcm(c(3,0.3,3)*2.54),
widths=lcm(3*2.54))
par(mai=c(0.4,0.4,0.2,0.2), omi=c(0,0,0,0.25))
## Ricker
plot(ss, rr, type="n", xlim=range(ss), ylim=range(ss), xaxs="i", yaxs="i",
xlab="", ylab="", xaxt="n", yaxt="n", bty="L")
dev.off()
## posterior of spawners
s_dat <- mod_res[,grep("Sp", colnames(mod_res))]
s_dat <- apply(s_dat, 2, quantile, CI_vec)
s_dat <- s_dat[, 1:(n_yrs-age_min+n_fore)]
## posterior of recruits
r_dat <- mod_res[, grep("tot_ln_Rec", colnames(mod_res))]
r_dat <- exp(apply(r_dat, 2, quantile, CI_vec))
## median values for a & b
aa <- apply(mod_res[, grep("ln_Rkr_a", colnames(mod_res))], 2, median)
bb <- median(mod_res[, "beta"])
## empty plot space for spawner-recruit relationships
dd <- 3000
yM <- around(max(r_dat), "ceiling", dd)
xM <- around(max(s_dat), "ceiling", dd)
par(mai = c(0.8,0.8,0.1,0.1), omi = c(0,0,0,0))
plot(s_dat[2,], r_dat[2,], xlim = c(0,xM), ylim = c(0,yM), type = "n",
xaxs = "i", yaxs = "i", cex.lab = 1.2,
xlab = expression(Spawners~(10^3)),
ylab = expression(Recruits~(10^3)),
xaxt = "n", yaxt = "n", bty="L")
dev.off()
axis(2, at = seq(0,yM,dd*2), labels = seq(0,yM,dd*2)/1000, las=1)
plot(s_dat[2,], r_dat[2,], xlim = c(0,xM), ylim = c(0,yM), type = "n",
xaxs = "i", yaxs = "i", cex.lab = 1.2,
xlab = expression(Spawners~(10^3)),
ylab = expression(Recruits~(10^3)),
xaxt = "n", yaxt = "n", bty="L")
axis(1, at = seq(0,xM,dd*2), labels = seq(0,xM,dd*2)/1000)
axis(2, at = seq(0,yM,dd*2), labels = seq(0,yM,dd*2)/1000, las=1)
options(width = 100)
knitr::opts_chunk$set(message = FALSE, dev = "pdf")
if(!require("readr")) {
install.packages("readr")
library("readr")
}
if(!require("captioner")) {
devtools::install_github("adletaw/captioner")
library("captioner")
}
if(!require("coda")) {
install.packages("coda")
library("coda")
}
if(!require("here")) {
install.packages("here")
library("here")
}
if(!require("gsl")) {
install.packages("gsl")
library("gsl")
}
## set default caption delimiter
fig_cap <- captioner(infix = ".")
## set directory locations
datadir <- here("data")
analdir <- here("analysis")
savedir <- here("analysis/cache")
## better round/floor/ceiling
around <- function(x, func = "round", prec = 1) {
## `func` can be "round", "floor", or "ceiling"
## `prec` is desired precision (eg, 0.1 is to nearest tenth)
if(!is.double(x)) {
stop("`x` must be a real number")
}
if(!(func %in% c("round", "floor", "ceiling"))) {
stop("`func` must be \"round\", \"floor\", or \"ceiling\"")
}
if(prec <= 0) {
stop("`prec` cannot be less than or equal to 0")
}
do.call(func, list(x / prec)) * prec
}
## first & last years of fish data
yr_frst <- 1992
yr_last <- 2016
## years of data
dat_yrs <- seq(yr_frst, yr_last)
## number of years of data
n_yrs <- length(dat_yrs)
## min & max adult age classes
age_min <- 2
age_max <- 5
## num of age classes
A <- age_max - age_min + 1
## number of years for run forecasts
n_fore <- 0
## posterior coverage interval
CI_vec <- c(0.025,0.5,0.975)
## covariate names & units for plotting
cov_names <- c(expression(paste("Max flow (",m^3," ",s^{-1},")")),
expression(paste("Min flow (",m^3," ",s^{-1},")")),
"NPGO")
## 1. file with escapement data
## [n_yrs x 2] matrix of obs counts; 1st col is calendar yr
fn_esc <- "skagit_sfck_esc.csv"
## 2. file with harvest data
## [n_yrs x 2] matrix of obs catch; 1st col is calendar yr
fn_harv <- "skagit_sf_chinook_aeq.csv"
best_fit <- readRDS(file.path(savedir, "fit_ricker_cov.rds"))
## covariate(s)
dat_cvrs <- read_csv(file.path(datadir, "skagit_chinook_covars.csv"))
## total number of covariates
n_cov <- dim(dat_cvrs)[2] - 1
## escapement
dat_esc <- read_csv(file.path(datadir, fn_esc))
##
dat_esc <- dat_esc[which(dat_esc$year %in% seq(yr_frst,yr_last,1)),]
## years of data
dat_yrs <- dat_esc$year
## number of years of data
n_yrs <- length(dat_yrs)
## log of escapement
ln_dat_esc <- c(log(dat_esc$escapement),rep(NA,n_fore))
## harvest
dat_harv <- read_csv(file.path(datadir, fn_harv))
##
dat_harv <- dat_harv[which(dat_harv$year %in% seq(yr_frst,yr_last,1)),]
## drop year col & first age_max rows
dat_harv <- c(dat_harv$tot_aeq, rep(0,n_fore))
## params
## Ricker
ra <- 3
rb <- 1.2e-4
## B-H
ba <- 3
bb <- 3/1.4e4
## ref pts
## Ricker
rmr <- ra/rb*exp(-1)
rsy <- (1 - lambert_W0(exp(1)/ra)) / rb
ruy <- 1 - lambert_W0(exp(1)/ra)
## B-H
bmr <- ba/bb
bsy <- (ba/bb)*sqrt(1/ba)-(1/bb)
bsy <- (sqrt(ba)-1)/bb
buy <- 1 - sqrt(1/ba)
## S-R curves
## spawners
ss <- seq(0,1.2e4,10)
## recuits (Ricker)
rr <- ra*ss/exp(rb*ss)
## recruits (B-H)
br <- ba*ss/(1 + bb*ss)
layout(matrix(c(1,0,2),3,1),
heights=lcm(c(3,0.3,3)*2.54),
widths=lcm(3*2.54))
par(mai=c(0.4,0.4,0.2,0.2), omi=c(0,0,0,0.25))
## Ricker
plot(ss, rr, type="n", xlim=range(ss), ylim=range(ss), xaxs="i", yaxs="i",
xlab="", ylab="", xaxt="n", yaxt="n", bty="L")
## results
mod_res <- do.call("rbind", best_fit)
## results
mod_res <- do.call("rbind", best_fit)
layout(matrix(c(1,1,2,3),2,2),c(3,2),c(1,1))
yoffSet <- 0.03
## colors for plotting
clr <- rgb(100, 0, 200,
alpha = seq(200, 100,
length.out = age_max-age_min+n_fore),
maxColorValue = 255)
## posterior of spawners
s_dat <- mod_res[,grep("Sp", colnames(mod_res))]
s_dat <- apply(s_dat, 2, quantile, CI_vec)
s_dat <- s_dat[, 1:(n_yrs-age_min+n_fore)]
## posterior of recruits
r_dat <- mod_res[, grep("tot_ln_Rec", colnames(mod_res))]
## median values for a & b
aa <- apply(mod_res[, grep("ln_Rkr_a", colnames(mod_res))], 2, median)
bb <- median(mod_res[, "beta"])
## empty plot space for spawner-recruit relationships
dd <- 3000
## empty plot space for spawner-recruit relationships
dd <- 3000
yM <- around(max(r_dat), "ceiling", dd)
par(mai = c(0.8,0.8,0.1,0.1), omi = c(0,0,0,0))
axis(1, at = seq(0,xM,dd*2), labels = seq(0,xM,dd*2)/1000)
## empty plot space for spawner-recruit relationships
dd <- 3000
yM <- around(max(r_dat), "ceiling", dd)
xM <- around(max(s_dat), "ceiling", dd)
par(mai = c(0.8,0.8,0.1,0.1), omi = c(0,0,0,0))
plot(s_dat[2,], r_dat[2,], xlim = c(0,xM), ylim = c(0,yM), type = "n",
xaxs = "i", yaxs = "i", cex.lab = 1.2,
xlab = expression(Spawners~(10^3)),
ylab = expression(Recruits~(10^3)),
xaxt = "n", yaxt = "n", bty="L")
axis(1, at = seq(0,xM,dd*2), labels = seq(0,xM,dd*2)/1000)
axis(2, at = seq(0,yM,dd*2), labels = seq(0,yM,dd*2)/1000, las=1)
