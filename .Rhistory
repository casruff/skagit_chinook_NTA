##
dat_esc <- dat_esc[which(dat_esc$year %in% seq(yr_frst,yr_last,1)),]
## years of data
dat_yrs <- dat_esc$year
## number of years of data
n_yrs <- length(dat_yrs)
## log of escapement
ln_dat_esc <- c(log(dat_esc$escapement),rep(NA,n_fore))
## harvest
dat_harv <- read_csv(file.path(datadir, fn_harv))
##
dat_harv <- dat_harv[which(dat_harv$year %in% seq(yr_frst,yr_last,1)),]
## drop year col & first age_max rows
dat_harv <- c(dat_harv$tot_aeq, rep(0,n_fore))
## params
## Ricker
ra <- 3
rb <- 1.2e-4
## B-H
ba <- 3
bb <- 3/1.4e4
## ref pts
## Ricker
rmr <- ra/rb*exp(-1)
rsy <- (1 - lambert_W0(exp(1)/ra)) / rb
ruy <- 1 - lambert_W0(exp(1)/ra)
## B-H
bmr <- ba/bb
bsy <- (ba/bb)*sqrt(1/ba)-(1/bb)
bsy <- (sqrt(ba)-1)/bb
buy <- 1 - sqrt(1/ba)
## S-R curves
## spawners
ss <- seq(0,1.2e4,10)
## recuits (Ricker)
rr <- ra*ss/exp(rb*ss)
## recruits (B-H)
br <- ba*ss/(1 + bb*ss)
layout(matrix(c(1,0,2),3,1),
heights=lcm(c(3,0.3,3)*2.54),
widths=lcm(3*2.54))
par(mai=c(0.4,0.4,0.2,0.2), omi=c(0,0,0,0.25))
## Ricker
plot(ss, rr, type="n", xlim=range(ss), ylim=range(ss), xaxs="i", yaxs="i",
xlab="", ylab="", xaxt="n", yaxt="n", bty="L")
## results
mod_res <- do.call("rbind", best_fit)
## results
mod_res <- do.call("rbind", best_fit)
layout(matrix(c(1,1,2,3),2,2),c(3,2),c(1,1))
yoffSet <- 0.03
## colors for plotting
clr <- rgb(100, 0, 200,
alpha = seq(200, 100,
length.out = age_max-age_min+n_fore),
maxColorValue = 255)
## posterior of spawners
s_dat <- mod_res[,grep("Sp", colnames(mod_res))]
s_dat <- apply(s_dat, 2, quantile, CI_vec)
s_dat <- s_dat[, 1:(n_yrs-age_min+n_fore)]
## posterior of recruits
r_dat <- mod_res[, grep("tot_ln_Rec", colnames(mod_res))]
## median values for a & b
aa <- apply(mod_res[, grep("ln_Rkr_a", colnames(mod_res))], 2, median)
bb <- median(mod_res[, "beta"])
## empty plot space for spawner-recruit relationships
dd <- 3000
## empty plot space for spawner-recruit relationships
dd <- 3000
yM <- around(max(r_dat), "ceiling", dd)
par(mai = c(0.8,0.8,0.1,0.1), omi = c(0,0,0,0))
axis(1, at = seq(0,xM,dd*2), labels = seq(0,xM,dd*2)/1000)
## empty plot space for spawner-recruit relationships
dd <- 3000
yM <- around(max(r_dat), "ceiling", dd)
xM <- around(max(s_dat), "ceiling", dd)
par(mai = c(0.8,0.8,0.1,0.1), omi = c(0,0,0,0))
plot(s_dat[2,], r_dat[2,], xlim = c(0,xM), ylim = c(0,yM), type = "n",
xaxs = "i", yaxs = "i", cex.lab = 1.2,
xlab = expression(Spawners~(10^3)),
ylab = expression(Recruits~(10^3)),
xaxt = "n", yaxt = "n", bty="L")
axis(1, at = seq(0,xM,dd*2), labels = seq(0,xM,dd*2)/1000)
axis(2, at = seq(0,yM,dd*2), labels = seq(0,yM,dd*2)/1000, las=1)
options(width = 100)
knitr::opts_chunk$set(message = FALSE, dev = "pdf")
if(!require("readr")) {
install.packages("readr")
library("readr")
}
if(!require("captioner")) {
devtools::install_github("adletaw/captioner")
library("captioner")
}
if(!require("coda")) {
install.packages("coda")
library("coda")
}
if(!require("here")) {
install.packages("here")
library("here")
}
if(!require("gsl")) {
install.packages("gsl")
library("gsl")
}
## set default caption delimiter
fig_cap <- captioner(infix = ".")
## set directory locations
datadir <- here("data")
analdir <- here("analysis")
savedir <- here("analysis/cache")
## better round/floor/ceiling
around <- function(x, func = "round", prec = 1) {
## `func` can be "round", "floor", or "ceiling"
## `prec` is desired precision (eg, 0.1 is to nearest tenth)
if(!is.double(x)) {
stop("`x` must be a real number")
}
if(!(func %in% c("round", "floor", "ceiling"))) {
stop("`func` must be \"round\", \"floor\", or \"ceiling\"")
}
if(prec <= 0) {
stop("`prec` cannot be less than or equal to 0")
}
do.call(func, list(x / prec)) * prec
}
## first & last years of fish data
yr_frst <- 1992
yr_last <- 2016
## years of data
dat_yrs <- seq(yr_frst, yr_last)
## number of years of data
n_yrs <- length(dat_yrs)
## min & max adult age classes
age_min <- 2
age_max <- 5
## num of age classes
A <- age_max - age_min + 1
## number of years for run forecasts
n_fore <- 0
## posterior coverage interval
CI_vec <- c(0.025,0.5,0.975)
## covariate names & units for plotting
cov_names <- c(expression(paste("Max flow (",m^3," ",s^{-1},")")),
expression(paste("Min flow (",m^3," ",s^{-1},")")),
"NPGO")
## 1. file with escapement data
## [n_yrs x 2] matrix of obs counts; 1st col is calendar yr
fn_esc <- "skagit_sfck_esc.csv"
## 2. file with harvest data
## [n_yrs x 2] matrix of obs catch; 1st col is calendar yr
fn_harv <- "skagit_sf_chinook_aeq.csv"
best_fit <- readRDS(file.path(savedir, "fit_ricker_cov.rds"))
## covariate(s)
dat_cvrs <- read_csv(file.path(datadir, "skagit_chinook_covars.csv"))
## total number of covariates
n_cov <- dim(dat_cvrs)[2] - 1
## escapement
dat_esc <- read_csv(file.path(datadir, fn_esc))
##
dat_esc <- dat_esc[which(dat_esc$year %in% seq(yr_frst,yr_last,1)),]
## years of data
dat_yrs <- dat_esc$year
## number of years of data
n_yrs <- length(dat_yrs)
## log of escapement
ln_dat_esc <- c(log(dat_esc$escapement),rep(NA,n_fore))
## harvest
dat_harv <- read_csv(file.path(datadir, fn_harv))
##
dat_harv <- dat_harv[which(dat_harv$year %in% seq(yr_frst,yr_last,1)),]
## drop year col & first age_max rows
dat_harv <- c(dat_harv$tot_aeq, rep(0,n_fore))
## params
## Ricker
ra <- 3
rb <- 1.2e-4
## B-H
ba <- 3
bb <- 3/1.4e4
## ref pts
## Ricker
rmr <- ra/rb*exp(-1)
rsy <- (1 - lambert_W0(exp(1)/ra)) / rb
ruy <- 1 - lambert_W0(exp(1)/ra)
## B-H
bmr <- ba/bb
bsy <- (ba/bb)*sqrt(1/ba)-(1/bb)
bsy <- (sqrt(ba)-1)/bb
buy <- 1 - sqrt(1/ba)
## S-R curves
## spawners
ss <- seq(0,1.2e4,10)
## recuits (Ricker)
rr <- ra*ss/exp(rb*ss)
## recruits (B-H)
br <- ba*ss/(1 + bb*ss)
## results
mod_res <- do.call("rbind", best_fit)
clr <- rgb(0, 0, 255, alpha = 50, maxColorValue = 255)
## estimated spawner data for plotting
p_dat <- mod_res[,grep("Sp", colnames(mod_res))]
p_dat <- apply(p_dat, 2, quantile, CI_vec)
p_dat <- p_dat + matrix(dat_harv, length(CI_vec), n_yrs+n_fore, byrow = TRUE)
## time seq
t_idx_f <- seq(yr_frst, length.out = n_yrs+n_fore)
## plot
yp_min <- min(p_dat)
## plot
yp_min <- min(p_dat)
yp_max <- max(p_dat)
par(mai = c(0.8,0.8,0.1,0.1), omi = c(0.5,0.2,0.1,0.2))
plot(t_idx_f, p_dat[3,], ylim = c(yp_min,yp_max), type = "n",
log = "y", xaxt = "n", yaxt = "n", bty = "L",
xlab = "Year", ylab = "Run size (Catch + Escapement)", main = "", cex.lab = 1.2)
polygon(c(t_idx_f, rev(t_idx_f)), c(p_dat[3,], rev(p_dat[1,])),
col = clr, border = NA)
p_dat
i <- 1
aa[1]
## median values for a & b
aa <- apply(mod_res[, grep("ln_Rkr_a", colnames(mod_res))], 2, median)
bb <- median(mod_res[, "beta"])
aa1
aa[1]
aa
mod_res[, grep("ln_Rkr_a", colnames(mod_res))]
mod_res
colnames(mod_res)
## median values for a & b
#aa <- apply(mod_res[, grep("E_Rkr_a", colnames(mod_res))], 2, median)
aa <- mod_res[, grep("E_Rkr_a", colnames(mod_res))]
aa
## median values for a & b
#aa <- apply(mod_res[, grep("ln_Rkr_a", colnames(mod_res))], 2, median)
aa <- mod_res[, grep("mu_Rkr_a", colnames(mod_res))]
aa
## B-H alpha
R_alpha_est <- mod_res[, "alpha"]
alphaCI <- quantile(R_alpha_est, CI_vec)
R_alpha_est[R_alpha_est > a_thresh] <- a_thresh
hist(R_alpha_est, freq = FALSE, breaks = seq(0, a_thresh+1, 2),
col = clr, border = "blue3",
xlab = "", ylab = "", main = "", cex.lab = 1.2, yaxt = "n")
a_thresh <- 59
par(mai = c(0.8,0.4,0.3,0.1))
## B-H alpha
R_alpha_est <- mod_res[, "alpha"]
alphaCI <- quantile(R_alpha_est, CI_vec)
R_alpha_est[R_alpha_est > a_thresh] <- a_thresh
hist(R_alpha_est, freq = FALSE, breaks = seq(0, a_thresh+1, 2),
col = clr, border = "blue3",
xlab = "", ylab = "", main = "", cex.lab = 1.2, yaxt = "n")
alphaCI
## K in 1000s
#R_b_est <- (aa-1) / bb / 1000
R_b_est <- aa/bb/1000
R_b_est <- R_b_est[R_b_est > 0]
R_b_CI <- quantile(R_b_est, CI_vec)
R_b_CI
aa <- mod_res[, "E_Rkr_a"]
bb <- mod_res[, "beta"]
## K in 1000s
#R_b_est <- (aa-1) / bb / 1000
R_b_est <- aa/bb/1000
R_b_est <- R_b_est[R_b_est > 0]
R_b_CI <- quantile(R_b_est, CI_vec)
## pile into last ban for plotting
R_b_est[R_b_est > 34] <- 34
brks <- seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
length.out = length(seq(0, a_thresh, 2)))
hist(R_b_est, freq = FALSE, breaks = brks, col = clr, border = "blue3",
xlab = "", xaxt = "n", yaxt = "n",
main = "", ylab = "", cex.lab = 1.2)
## pile into last ban for plotting
R_b_est[R_b_est > 50] <- 50
brks <- seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
length.out = length(seq(0, a_thresh, 2)))
hist(R_b_est, freq = FALSE, breaks = brks, col = clr, border = "blue3",
xlab = "", xaxt = "n", yaxt = "n",
main = "", ylab = "", cex.lab = 1.2)
## pile into last ban for plotting
R_b_est[R_b_est > 40] <- 40
brks <- seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
length.out = length(seq(0, a_thresh, 2)))
hist(R_b_est, freq = FALSE, breaks = brks, col = clr, border = "blue3",
xlab = "", xaxt = "n", yaxt = "n",
main = "", ylab = "", cex.lab = 1.2)
axis(1, at = seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
2))
R_b_est
min(r_b_est)
min(R_b_est)
max(r_b_est)
max(R_b_est)
## K in 1000s
#R_b_est <- (aa-1) / bb / 1000
R_b_est <- aa/bb/1000
R_b_est <- R_b_est[R_b_est > 0]
R_b_CI <- quantile(R_b_est, CI_vec)
## pile into last ban for plotting
R_b_est[R_b_est > 40] <- 40
brks <- seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
length.out = length(seq(0, a_thresh, 2)))
hist(R_b_est, freq = FALSE, breaks = brks, col = clr, border = "blue3",
xlab = "", xaxt = "n", yaxt = "n",
main = "", ylab = "", cex.lab = 1.2)
## K in 1000s
#R_b_est <- (aa-1) / bb / 1000
R_b_est <- aa/bb/1000
R_b_est <- R_b_est[R_b_est > 0]
R_b_CI <- quantile(R_b_est, CI_vec)
## pile into last ban for plotting
R_b_est[R_b_est > 40] <- 50
brks <- seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
length.out = length(seq(0, a_thresh, 2)))
## K in 1000s
#R_b_est <- (aa-1) / bb / 1000
R_b_est <- aa/bb/1000
R_b_est <- R_b_est[R_b_est > 0]
R_b_CI <- quantile(R_b_est, CI_vec)
## pile into last ban for plotting
R_b_est[R_b_est > 50] <- 50
brks <- seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
length.out = length(seq(0, a_thresh, 2)))
hist(R_b_est, freq = FALSE, breaks = brks, col = clr, border = "blue3",
xlab = "", xaxt = "n", yaxt = "n",
main = "", ylab = "", cex.lab = 1.2)
## pile into last ban for plotting
R_b_est[R_b_est > 70] <- 70
brks <- seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
length.out = length(seq(0, a_thresh, 2)))
hist(R_b_est, freq = FALSE, breaks = brks, col = clr, border = "blue3",
xlab = "", xaxt = "n", yaxt = "n",
main = "", ylab = "", cex.lab = 1.2)
## K in 1000s
#R_b_est <- (aa-1) / bb / 1000
R_b_est <- aa/bb/1000
R_b_est <- R_b_est[R_b_est > 0]
R_b_CI <- quantile(R_b_est, CI_vec)
## pile into last ban for plotting
R_b_est[R_b_est > 70] <- 70
brks <- seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
length.out = length(seq(0, a_thresh, 2)))
hist(R_b_est, freq = FALSE, breaks = brks, col = clr, border = "blue3",
xlab = "", xaxt = "n", yaxt = "n",
main = "", ylab = "", cex.lab = 1.2)
## pile into last ban for plotting
R_b_est[R_b_est > 60] <- 60
aa <- mod_res[, "E_Rkr_a"]
bb <- mod_res[, "beta"]
## K in 1000s
#R_b_est <- (aa-1) / bb / 1000
R_b_est <- aa/bb/1000
R_b_est <- R_b_est[R_b_est > 0]
R_b_CI <- quantile(R_b_est, CI_vec)
## pile into last ban for plotting
R_b_est[R_b_est > 60] <- 60
brks <- seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
length.out = length(seq(0, a_thresh, 2)))
hist(R_b_est, freq = FALSE, breaks = brks, col = clr, border = "blue3",
xlab = "", xaxt = "n", yaxt = "n",
main = "", ylab = "", cex.lab = 1.2)
a_thresh <- 4.18
par(mai = c(0.8,0.4,0.3,0.1))
## B-H alpha
R_alpha_est <- mod_res[, "alpha"]
alphaCI <- quantile(R_alpha_est, CI_vec)
R_alpha_est[R_alpha_est > a_thresh] <- a_thresh
hist(R_alpha_est, freq = FALSE, breaks = seq(0, a_thresh+1, 2),
col = clr, border = "blue3",
xlab = "", ylab = "", main = "", cex.lab = 1.2, yaxt = "n")
R_alpha_est
alphaCI <- quantile(R_alpha_est, CI_vec)
alphaCI
alphaCI <- quantile(R_alpha_est, CI_vec)
R_alpha_est[R_alpha_est > a_thresh] <- a_thresh
hist(R_alpha_est, freq = FALSE, breaks = seq(0, a_thresh+1, 2),
col = clr, border = "blue3",
xlab = "", ylab = "", main = "", cex.lab = 1.2, yaxt = "n")
a_thresh <- 4
par(mai = c(0.8,0.4,0.3,0.1))
## B-H alpha
R_alpha_est <- mod_res[, "alpha"]
alphaCI <- quantile(R_alpha_est, CI_vec)
R_alpha_est[R_alpha_est > a_thresh] <- a_thresh
hist(R_alpha_est, freq = FALSE, breaks = seq(0, a_thresh+1, 2),
col = clr, border = "blue3",
xlab = "", ylab = "", main = "", cex.lab = 1.2, yaxt = "n")
R_alpha_est
## B-H alpha
R_alpha_est <- mod_res[, "alpha"]
alphaCI <- quantile(R_alpha_est, CI_vec)
R_alpha_est[R_alpha_est > a_thresh] <- a_thresh
hist(R_alpha_est, freq = FALSE, breaks = seq(0, a_thresh+1, 0.5),
col = clr, border = "blue3",
xlab = "", ylab = "", main = "", cex.lab = 1.2, yaxt = "n")
## B-H alpha
R_alpha_est <- mod_res[, "alpha"]
alphaCI <- quantile(R_alpha_est, CI_vec)
R_alpha_est[R_alpha_est > a_thresh] <- a_thresh
hist(R_alpha_est, freq = FALSE, breaks = seq(0, a_thresh+1, 0.1),
col = clr, border = "blue3",
xlab = "", ylab = "", main = "", cex.lab = 1.2, yaxt = "n")
a_thresh <- 5
par(mai = c(0.8,0.4,0.3,0.1))
## B-H alpha
R_alpha_est <- mod_res[, "alpha"]
alphaCI <- quantile(R_alpha_est, CI_vec)
R_alpha_est[R_alpha_est > a_thresh] <- a_thresh
hist(R_alpha_est, freq = FALSE, breaks = seq(0, a_thresh+1, 0.1),
col = clr, border = "blue3",
xlab = "", ylab = "", main = "", cex.lab = 1.2, yaxt = "n")
a_thresh <- 10
par(mai = c(0.8,0.4,0.3,0.1))
## B-H alpha
R_alpha_est <- mod_res[, "alpha"]
alphaCI <- quantile(R_alpha_est, CI_vec)
R_alpha_est[R_alpha_est > a_thresh] <- a_thresh
hist(R_alpha_est, freq = FALSE, breaks = seq(0, a_thresh+1, 0.1),
col = clr, border = "blue3",
xlab = "", ylab = "", main = "", cex.lab = 1.2, yaxt = "n")
## posterior for alpha
clr <- rgb(0, 0, 255, alpha = 50, maxColorValue = 255)
a_thresh <- 10
par(mai = c(0.8,0.4,0.3,0.1))
## B-H alpha
R_alpha_est <- mod_res[, "alpha"]
alphaCI <- quantile(R_alpha_est, CI_vec)
R_alpha_est[R_alpha_est > a_thresh] <- a_thresh
hist(R_alpha_est, freq = FALSE, breaks = seq(0, a_thresh+1, 0.5),
col = clr, border = "blue3",
xlab = "", ylab = "", main = "", cex.lab = 1.2, yaxt = "n")
## posterior for alpha
clr <- rgb(0, 0, 255, alpha = 50, maxColorValue = 255)
a_thresh <- 10
par(mai = c(0.8,0.4,0.3,0.1))
## B-H alpha
R_alpha_est <- mod_res[, "alpha"]
alphaCI <- quantile(R_alpha_est, CI_vec)
R_alpha_est[R_alpha_est > a_thresh] <- a_thresh
hist(R_alpha_est, freq = FALSE, breaks = seq(0, a_thresh+1, 0.2),
col = clr, border = "blue3",
xlab = "", ylab = "", main = "", cex.lab = 1.2, yaxt = "n")
## posterior for alpha
clr <- rgb(0, 0, 255, alpha = 50, maxColorValue = 255)
a_thresh <- 8
par(mai = c(0.8,0.4,0.3,0.1))
## B-H alpha
R_alpha_est <- mod_res[, "alpha"]
alphaCI <- quantile(R_alpha_est, CI_vec)
R_alpha_est[R_alpha_est > a_thresh] <- a_thresh
hist(R_alpha_est, freq = FALSE, breaks = seq(0, a_thresh+1, 0.2),
col = clr, border = "blue3",
xlab = "", ylab = "", main = "", cex.lab = 1.2, yaxt = "n")
aHt <- (par()$usr[4]-par()$usr[3])/12
arrows(alphaCI, par()$usr[3], alphaCI,par()$usr[3]-aHt,
code = 1, length = 0.05, xpd = NA, col = "blue3", lwd = 1.5)
mtext(expression(Instrinsic~productivity~(alpha)), 1, line = 3, cex = 1)
text(x = par()$usr[1],
y = par()$usr[4] * 1.05,
"(b)", xpd=NA)
## posterior for K
par(mai = c(0.8,0.4,0.3,0.1))
aa <- mod_res[, "E_Rkr_a"]
bb <- mod_res[, "beta"]
## K in 1000s
#R_b_est <- (aa-1) / bb / 1000
R_b_est <- aa/bb/1000
R_b_est <- R_b_est[R_b_est > 0]
R_b_CI <- quantile(R_b_est, CI_vec)
## pile into last ban for plotting
R_b_est[R_b_est > 60] <- 60
brks <- seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
length.out = length(seq(0, a_thresh, 2)))
hist(R_b_est, freq = FALSE, breaks = brks, col = clr, border = "blue3",
xlab = "", xaxt = "n", yaxt = "n",
main = "", ylab = "", cex.lab = 1.2)
axis(1, at = seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
2))
R_b_est
brks
brks <- seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
length.out = length(seq(0, 60, 2)))
hist(R_b_est, freq = FALSE, breaks = brks, col = clr, border = "blue3",
xlab = "", xaxt = "n", yaxt = "n",
main = "", ylab = "", cex.lab = 1.2)
axis(1, at = seq(around(min(R_b_est), "floor"),
around(max(R_b_est), "ceiling"),
2))
aHt <- (par()$usr[4] - par()$usr[3]) / 12
arrows(R_b_CI, par()$usr[3], R_b_CI,par()$usr[3]-aHt,
code = 1, length = 0.05, xpd = NA, col = "blue3", lwd = 1.5)
mtext(expression(paste("Carrying capacity (",italic(K),", ",10^3,")")),
side = 1, line = 3, cex = 1)
text(x = par()$usr[1],
y = par()$usr[4] * 1.05,
"(c)", xpd=NA)
